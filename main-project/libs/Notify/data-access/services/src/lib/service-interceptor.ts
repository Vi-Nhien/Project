import {
  HttpErrorResponse,
  HttpEvent,
  HttpHandler,
  HttpRequest,
} from '@angular/common/http';
import { HttpInterceptor } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { EMPTY, Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

@Injectable()
export class ServiceInterceptor implements HttpInterceptor {
  // auth_token = 'eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZDQkMtSFM1MTIiLCJraWQiOiIyM0VBOTUxMkY2NjZCMDA1MUY3Q0QzN0NFMjkzMkIxN0NFMkNCODhBIiwidHlwIjoiYXQrand0In0.Muqw_jpqizYwT7YNv80T2AhplyRqxM9l6N6Hp7eTSdczSFIybwkI0--7sA2BCSBduHWmICQLcSKfFDaDqV9YfAex76drJvktuD6uO2_ZH1xgezuQaooFpBSqE0I6X3QkoelMulGHVr0b3gLYaTrKHXEbNgqJ84iGCt0RJQ74Ms-TMubC-4uuFbbbPHG27T8PfcTNOn8M0tNzsMEw3MkMvzOAGWgOFZBfakoyZoER2P6hk7lvyd9CEOUAzaRv891w4CWx7MLkXuApzk13XhLseuszaF5vsMQ0EUvlNwzldqT40sDZvbb6z7UQ-S6Oii3UDkUo0PZAFheCLRe4fNoQ-A.CLZt_LdtIUFvd_3ejkfF4Q.OfNWFvAZg_7CcFLC6Chzh7Ujhwa33aNkIWjPU76davhHl5xRCsSZEbfQQW2Y2EXlb4eQT34lhpahzrINDQwQ6jibdG_cluClMyaTTTlrpUmZNIrRNp5fWZINJBpdOSpTYl7-XZvr3dHriuWeOjQVbbSzYwd_4GI8jLwgf-qz2DC_vRV10SKh5ZBIDF2btk9HuXX1otrasyJd7Z0m4gHA-PnbGHgL2juvQ0ARwiqoC6NYKrtmbo3klxKNOvk0fTGRmzbQJTIuQ-o5-UK2e5kCFGEEySk7RIolePOZQ2B0D2Yj-Cl5Dn7mIT7IUUiBLc5tJFYplZoUClRSy3h1oY2eh3oAMCR6nhzpgaiC-o55eB9Z-m7S_-y_fvh1XLAzP3QqiDnS_7ol-HFyx7Lv_VvIfh5jB4N9EFu20VwBDLokCGqSwQ5jtCl9e5hNeV6VyULRyuTUJ0Y0GqeQBXxZKZnutFNiqrJb_y-Wt67mjf624L8yn7ZEOUYud_sqR9v-RFxTKd-TS42Q9sRawqIW1ozG-nTBGZtswRR6IJf1WY6E2xzQodEmdYM6Ihb4BrbrRN19OnSY6hfpC-CurLT0hOPK4xiG0kGUf0siIe8bu9I3JdQJxRCvTuMAxisoctzZvJBKbXLmmYYMF3pmvjUBDoso1VnoY1-mITlLSNhogDOTy9evq3bQBUYO-IMhu2sA9NniPwjR_LfOUQZ9Taz7BtkWxKWtcMjtdLBdMYH59doC388jtbXzSO0hYTbxB-YN3eBx0VmC_oboBRpJsNhdtXBFqItD0HMQruVDa93bdztdTXK2sBhvDeSHVjz-UM3DUs93OO1QXpNXm6LG6QXOt4XtruuCaINL5l3rfEihjzG-AlPVKZRMiQz3bCL0tGiP1rWHGLbcebAkNwE1weEAHCb-kcVqHU8G_hy-JJdM-VIBaVe3TgpJntiD7tywSAAZFwO5nDjx1PKPCD_WcWQTzQELi5eR0Ukd4ZHLrKUI4PiBjNaKgb5lxUN3sP7Ez0sK0PihFg-UX265HudDGfzckeJ6b99_G56bDiMnBXeITAx96O-l4E6nluH1M6Hgm1nhyrmzMGXhTcWSf9cBRaEqo7yb_3LinQdswzFzgyo8nnuC8aZZbhjNIXZW_Tp320jRhEs3gRCuB1IjrgAaMgg7EAIS0x09GOw_3bWtr9B7TVppIMlP0QV5A9nKhg4DBbu3CnCIKZyyN6kkCS6YpSfj9KS7M4UGTsdJzUGa6KE8aY3cwriRr6C4mcdk5Pb443SdC6ezWS5uSNcZUzsECllMdAhRoEvkEiAdlyRQL1S9jaUpO8NQ4C2gOi3_0B4dAMqsaNBaYTvntvv0KkPESsUhYorHTQOSkaFHjR2ndlofLn0E_3ThBiIu8qTAd8onXercxZYSN2w0NbpsIlmp9Efe2SD9HniPKPw00-ejVY57LEiiPb0kH-a2IMLQQ0qS4F-y2j1Y.rF5-ZTz71RsGWtcHP_e9sAy_2IYTJU2wNPH1e2_njlI'
  intercept(
    req: HttpRequest<unknown>,
    next: HttpHandler
  ): Observable<HttpEvent<unknown>> {


      req = req.clone({
        setHeaders: { Authorization: `Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZDQkMtSFM1MTIiLCJraWQiOiIyM0VBOTUxMkY2NjZCMDA1MUY3Q0QzN0NFMjkzMkIxN0NFMkNCODhBIiwidHlwIjoiYXQrand0In0.RMchkT9HcPpGP4jmqa5--qCjWeTdnhLIrG-6-cG4-H9c_fBBS_IXNV7a3dsPNDaNTnpe50BCP8k9bsZTQ7J9hktzEB8WOdPrxVLFf7bIwBxuVcV2Nf5hY3pOUIP_4LeSK2j1ySfBFO-5W3whuOJDwMvwbxd_I-Lx78iYMrBJqd-LLJIEkMQEbX3fxVvukiUXOdiysjuUBTqikUivJ9aZIRuPPu3kO6wAR9aND03l72eb4oV4Zy8Xjek4MKBZCUugqc_9cbw9W7kbxbjy1UjVEGVcq2ICv8W1DidVpi6XlPhPeD0wdu2qkwmW0mL1Qo0ltMBGxy4XaDneHa9fzMIzBw.iNah9SPun5ptrpMmU-WUMQ.c2pJQWhIlZyul8rfIkSIN5XxZn-Zb8--iwYqlRXAvsdc5PYZeNFIu3d3k3aNzJ14Iptmnnk_6slC6ZjPeN6UF1GPDFN7NNcOEiZFM-SgmR9nKXCqca7YsTc-a5Yn8xmFBIySNRkCt6laUWBeraLotvXs-aQjgJCt5nq4GHA7G0dzyRF1PmgcubZHFgAL3x_XtrwqT8qAU47oysYi5N515VCjbCYPGSphwk3EcQDY3X-QDz93ZT8D7vuWNzBjUORJQ5_186AA0B929qiInIa3jk6BtCWmlh9VKoaDyU3IuKo71WQKiaJOaC9lrC7pX8Qoh4WetwEDr697zWDBxyXwO8zjJQ3iVfDg6rIQJi8WsUMhW1WiJujYOFHml1wJ3TzmiD2SJFT46rb0lbIBleCPWWgN8l8ys3m-k37rL4ddd8hUFfSCNtcpINEodqRDhg9yFQYAibdHbfPlpJLRQpfo2C9ueA9bZJLGMfAbycirjLpJSyr0OZOecePvJRrDor6CF3U7m_fidWcgWWCiBYvMSJigY41X5AoL2WFGtwRelDKNJSVxBiIYoYGhJ_pkwQwSgbKQ9uks9LvRdhE3b13AT4NjHcX6HYb90lgJ16ln8hzCsdE1fmPifKhzhoVJgAzoT75nddnVtXI1BQYvFo_ORX3qrPF_xPzPp9R5l4p3G4RQ-FnGgGm08EdePDcUvquV3Uy5lN4mAh9zgj0CzMbYuxckKYMydhJ8anJ1OKR87kWREAs747v6FHUxIGAUe5wUbIogPz2c1QifnL80RgGVdD8fdVVu8lpOmdvP6oFsBQtnn1NRqo3BU-wOw_F4GfsK8uhgTKGcXLF65vv8cNnZrculPiO5slA-FLR_DKPNHZRkQj9qReMBxgzb6g10goQIAFB6QU2RZIKaU4xSATH6J2YzVd675PDbDmZDtKBvka1cAokyU2xfFfJ3GRdR3hUXLTI0Wff478fNpr7NxkrysZRTzTzJv_rr5lYMLFh0V283YGhmVOWOLMkpNnYXPcsNQn2Dl97zfCXUBHBtOPpm1ASSoNlWw95fqX31JlubWJj4iBzg3ZBeqPA_eAAce__evbzNMDNIbhX4H_ToHE-pMg1BHTHRzm5EnMsXRlEyw-fsy7o2h9gwmjsjVVjU2UZbmadKirz8wUx5_As81OP7ZZq3nOBMfqcTLtNprA1ZZrzWW__sB0eoiYf51Ys-J0fA7y-yjB_9LfGNaD1H30FuQMCiQnXEmKsYfUGjBx3BeuWtYr39Ejm9MKn6ODyaO3vPzoR5nAvSf8MKo73bFVtRP6vhZXnW7Pyc8BnKM4nJ4jObeCR5rfaKQQWymf2aQQYDFVfcHSvvhOp1fesK5OISuU8tDCSebXOGtah5Yrt8HPsIqK6g4khUEPnrSpPgTllEfqS8JmFg_xb1CTWi9AOA6aTlPykm55XsXHZjj8SFtWa_0vndTOwf2BveKprJ0K6ZVGcZ__CHlQ54bw2MoRmcVjtooqJz2ouW2mDupamVsAA.9V3vL3s6R0cPZ8zsgWD2BTuWy7H0ZoXhktmkg91WHR0` },
      });


    return next.handle(req).pipe(s => this.handleErrors(s, req.url));
  }
  private handleErrors(
    source: Observable<HttpEvent<unknown>>,
    urlPath: string
  ): Observable<HttpEvent<unknown>> {
    return source.pipe(
      catchError((error: HttpErrorResponse) => {
        if (error.status === 401 && !urlPath.includes('/auth/')) {
          return this.handle401();
        }

        // rethrow error
        return throwError(() => error);
      })
    );
  }

  private handle401() {
    return EMPTY;
  }
}
